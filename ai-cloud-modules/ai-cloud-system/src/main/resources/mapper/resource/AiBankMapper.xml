<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.system.resource.mapper.AiBankMapper">

    <resultMap type="AiBank" id="AiBankResult">
        <result property="id" column="id"/>
        <result property="bankName" column="bank_name"/>
        <result property="bankIcon" column="bank_icon"/>
        <result property="sort" column="sort"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectAiBankVo">
        select id,
               bank_name,
               bank_icon,
               sort,
               create_by,
               create_time,
               update_by,
               update_time,
               remark
        from ai_bank
    </sql>

    <select id="selectAiBankList" parameterType="AiBank" resultMap="AiBankResult">
        <include refid="selectAiBankVo"/>
        <where>
            <if test="bankName != null  and bankName != ''">and bank_name like concat('%', #{bankName}, '%')</if>
        </where>
    </select>

    <select id="selectAiBankById" parameterType="Long" resultMap="AiBankResult">
        <include refid="selectAiBankVo"/>
        where id = #{id}
    </select>


    <select id="checkBankNameUnique" parameterType="String" resultMap="AiBankResult">
        <include refid="selectAiBankVo"/>
        where bank_name=#{bankName} limit 1
    </select>

    <insert id="insertAiBank" parameterType="AiBank">
        insert into ai_bank
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="bankName != null">bank_name,</if>
            <if test="bankIcon != null">bank_icon,</if>
            <if test="sort != null">sort,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="bankName != null">#{bankName},</if>
            <if test="bankIcon != null">#{bankIcon},</if>
            <if test="sort != null">#{sort},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateAiBank" parameterType="AiBank">
        update ai_bank
        <trim prefix="SET" suffixOverrides=",">
            <if test="bankName != null">bank_name = #{bankName},</if>
            <if test="bankIcon != null">bank_icon = #{bankIcon},</if>
            <if test="sort != null">sort = #{sort},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteAiBankById" parameterType="Long">
        delete
        from ai_bank
        where id = #{id}
    </delete>

    <delete id="deleteAiBankByIds" parameterType="String">
        delete from ai_bank where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
